<?xml version="1.0" encoding="UTF-8"?>
<testrun name="TestUserService.testAdd" project="cms-user" tests="1" started="1" failures="1" errors="0" ignored="0">
  <testcase name="testAdd" classname="org.leejianhao.cms.service.TestUserService" time="0.46">
    <failure>java.lang.AssertionError: 
  Expectation failure on verify:
    IUserDao.loadByUsername("admin1"): expected: 1, actual: 0
    IUserDao.add(org.leejianhao.cms.model.User@4e46b90a): expected: 1, actual: 0
    IUserDao.addUserRole(org.leejianhao.cms.model.User@4e46b90a, org.leejianhao.cms.model.Role@51e67ac): expected: 2, actual: 0
    IUserDao.addUserGroup(org.leejianhao.cms.model.User@4e46b90a, org.leejianhao.cms.model.Group@f284fd4): expected: 2, actual: 0&#13;
	at org.easymock.internal.MocksControl.verify(MocksControl.java:183)&#13;
	at org.easymock.EasyMock.verify(EasyMock.java:2142)&#13;
	at org.leejianhao.cms.service.TestUserService.testAdd(TestUserService.java:116)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&#13;
	at java.lang.reflect.Method.invoke(Method.java:597)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)&#13;
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)&#13;
&#13;
</failure>
  </testcase>
</testrun>
