package org.leejianhao.cms.service;

import static org.easymock.EasyMock.expect;
import static org.easymock.EasyMock.expectLastCall;
import static org.easymock.EasyMock.replay;
import static org.easymock.EasyMock.verify;
import static org.easymock.EasyMock.reset;
import static org.junit.Assert.*;
import javax.inject.Inject;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.leejianhao.cms.dao.IGroupDao;
import org.leejianhao.cms.dao.IRoleDao;
import org.leejianhao.cms.dao.IUserDao;
import org.leejianhao.cms.model.User;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration("/test-beans.xml")
public class TestUserService {
	@Inject
	private IUserService userService;
	@Inject
	private IRoleDao roleDao;
	@Inject
	private IUserDao userDao;
	@Inject
	private IGroupDao groupDao;
	
	private User baseUser = new User(1,"admin1","123","admin1","admin1@126.com","110",0);
	
	@Test
	public void testDelete() {
		reset(userDao);
		int uid = 2;
		userDao.deleteUserGroups(uid);
		expectLastCall();
		userDao.deleteUserRoles(uid);
		expectLastCall();
		userDao.delete(uid);
		expectLastCall();
		replay(userDao);
		userService.delete(uid);
		verify(userDao);
		
	}
	
	@Test
	public void testUpdateStatus() {
		reset(userDao);
		int uid = 2;
		expect(userDao.load(uid)).andReturn(baseUser);
		userDao.update(baseUser);
		replay(userDao);
		userService.updateStatus(uid);
		assertEquals(baseUser.getStatus(), 1);
		verify(userDao);
	}
}
